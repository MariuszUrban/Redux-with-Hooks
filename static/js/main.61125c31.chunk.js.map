{"version":3,"sources":["actionTypes.js","api.js","components/Header.js","components/AddTodo.js","actions.js","components/TodoItem.js","components/TodoList.js","components/TodoFilter.js","StateContext.js","components/App.js","reducers.js","configureStore.js","serviceWorker.js","index.js"],"names":["FETCH_TODOS","ADD_TODO","TOGGLE_TODO","REMOVE_TODO","FILTER_TODOS","generateID","S4","Math","random","toString","substring","fetchAPITodos","Promise","resolve","setTimeout","id","title","completed","Header","react_default","a","createElement","React","Component","AddTodo","dispatch","useDispatch","_useState","useState","_useState2","Object","slicedToArray","input","setInput","handleAdd","type","onSubmit","e","preventDefault","placeholder","style","width","height","value","onChange","target","float","marginTop","disabled","TodoItem","_ref","checked","toggleTodo","onClick","removeTodo","selectFilteredTodos","createSelector","state","todos","filter","t","TodoList","useSelector","map","item","assign","key","TodoFilterItem","name","color","cursor","fontWeight","TodoFilter","props","StateContext","createContext","App","useEffect","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","sent","stop","_x","apply","this","arguments","src_StateContext","Provider","Header_Header","appReducer","combineReducers","length","undefined","action","concat","toConsumableArray","objectSpread","store","createStore","applyMiddleware","thunk","Boolean","window","location","hostname","match","ReactDOM","render","es","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.61125c31.chunk.js","sourcesContent":["export const FETCH_TODOS = 'FETCH_TODOS'\nexport const ADD_TODO = 'ADD_TODO'\nexport const TOGGLE_TODO = 'TOGGLE_TODO'\nexport const REMOVE_TODO = 'REMOVE_TODO'\nexport const FILTER_TODOS = 'FILTER_TODOS'\n\n","export const generateID = () => {\n  const S4 = () => (((1+Math.random())*0x10000)|0).toString(16).substring(1)\n  return (S4()+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+S4()+S4())\n}\n\nexport const fetchAPITodos = () =>\n  new Promise((resolve) =>\n    setTimeout(() => resolve([\n      { id: generateID(), title: 'Do some groceries', completed: true },\n      { id: generateID(), title: 'Read a  cookbook', completed: false },\n      { id: generateID(), title: 'Prepare some romantic dinner', completed: false }\n    ]), 100)\n  )\n","import React from 'react'\n\nexport default class Header extends React.Component {\n  render () {\n    return <h1>ToDo</h1>\n  }\n}\n","import React, { useState } from 'react'\nimport {useDispatch} from 'react-redux'\nimport {addTodo} from '../actions';\n\nexport default function AddTodo () {\n  const dispatch = useDispatch(); \n  const [ input, setInput ] = useState('')\n\n  function handleInput (e) {\n    setInput(e.target.value)\n  }\n\n  function handleAdd () {\n    if (input) {\n      dispatch(addTodo(input))\n      setInput('')\n    }\n  }\n\n  return (\n    <form onSubmit={e => { e.preventDefault(); handleAdd() }}>\n      <input\n        type=\"text\"\n        placeholder=\"enter new task...\"\n        style={{ width: 350, height: 15 }}\n        value={input}\n        onChange={handleInput}\n      />\n      <input\n        type=\"submit\"\n        style={{ float: 'right', marginTop: 2 }}\n        disabled={!input}\n        value=\"add\"\n      />\n    </form>\n  )\n}\n","import {\n  ADD_TODO,\n  TOGGLE_TODO,\n  REMOVE_TODO,\n  FILTER_TODOS,\n  FETCH_TODOS,\n} from \"./actionTypes\";\nimport { fetchAPITodos } from \"./api\";\n\nexport function addTodo(title) {\n  return { type: ADD_TODO, title };\n}\n\nexport function toggleTodo(id) {\n  return { type: TOGGLE_TODO, id };\n}\n\nexport function removeTodo(id) {\n  return { type: REMOVE_TODO, id };\n}\n\nexport function filterTodo(filter) {\n  return { type: FILTER_TODOS, filter };\n}\n\nexport function fetchTodos() {\n    return async(dispatch) => {\n        const todos = await fetchAPITodos(); \n        dispatch({ type: FETCH_TODOS, todos})\n    }\n}\n\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleTodo, removeTodo } from \"../actions\";\n\nexport default function TodoItem({ title, completed, id }) {\n  const dispatch = useDispatch();\n\n  function handleToggle() {\n    dispatch(toggleTodo(id));\n  }\n\n  function handleRemove() {\n    dispatch(removeTodo(id));\n  }\n\n  return (\n    <div style={{ width: 400, height: 25 }}>\n      <input type=\"checkbox\" checked={completed} onChange={handleToggle} />\n      {title}\n      <button style={{ float: \"right\" }} onClick={handleRemove}>\n        x\n      </button>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { createSelector } from \"reselect\";\nimport TodoItem from \"../components/TodoItem\";\n\nconst todoSelector = (state) => state.todos;\nconst filterSelector = (state) => state.filter;\nconst selectFilteredTodos = createSelector(\n  todoSelector,\n  filterSelector,\n  (todos, filter) => {\n    switch (filter) {\n      case \"active\":\n        return todos.filter((t) => t.completed === false);\n\n      case \"completed\":\n        return todos.filter((t) => t.completed === true);\n\n      default:\n      case \"all\":\n        return todos;\n    }\n  }\n);\n\nexport default function TodoList() {\n  const filteredTodos = useSelector(selectFilteredTodos);\n\n  return filteredTodos.map((item) => <TodoItem {...item} key={item.id} />);\n}\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { filterTodo } from \"../actions\";\n\nfunction TodoFilterItem({ name }) {\n  const dispatch = useDispatch();\n  const filter = useSelector((state) => state.filter);\n\n  function handleFilter() {\n    dispatch(filterTodo(name));\n  }\n\n  const style = {\n    color: \"blue\",\n    cursor: \"pointer\",\n    fontWeight: filter === name ? \"bold\" : \"normal\",\n  };\n\n  return (\n    <span style={style} onClick={handleFilter}>\n      {name}\n    </span>\n  );\n}\n\nexport default function TodoFilter(props) {\n  return (\n    <div>\n      <TodoFilterItem {...props} name=\"all\" />\n      {\" / \"}\n      <TodoFilterItem {...props} name=\"active\" />\n      {\" / \"}\n      <TodoFilterItem {...props} name=\"completed\" />\n    </div>\n  );\n}\n","import React from 'react'\n\nconst StateContext = React.createContext([])\n\nexport default StateContext\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchTodos } from \"../actions\";\nimport Header from \"./Header\";\nimport AddTodo from \"../components/AddTodo\";\nimport TodoList from \"../components/TodoList\";\nimport TodoFilter from \"../components/TodoFilter\";\nimport StateContext from \"../StateContext\";\n\nexport default function App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchTodos());\n  }, [dispatch]);\n\n  return (\n    <StateContext.Provider>\n      <div style={{ width: 400 }}>\n        <Header />\n        <AddTodo />\n        <hr />\n        <TodoList />\n        <hr />\n        <TodoFilter />\n      </div>\n    </StateContext.Provider>\n  );\n}\n","import { combineReducers } from \"redux\";\n\nimport { generateID } from \"./api\";\n\nfunction filter(state = \"all\", action) {\n  if (action.type === \"FILTER_TODOS\") {\n    return action.filter;\n  } else {\n    return state;\n  }\n}\n\nfunction todos(state = [], action) {\n  switch (action.type) {\n    case \"FETCH_TODOS\":\n      return action.todos;\n\n    case \"ADD_TODO\":\n      const newTodo = {\n        id: generateID(),\n        title: action.title,\n        completed: false,\n      };\n      return [newTodo, ...state];\n\n    case \"TOGGLE_TODO\":\n      return state.map((t) => {\n        if (t.id === action.id) {\n          return { ...t, completed: !t.completed };\n        }\n        return t;\n      }, []);\n\n    case \"REMOVE_TODO\":\n      return state.filter((t) => {\n        if (t.id === action.id) {\n          return false;\n        }\n        return true;\n      });\n\n    default:\n      return state;\n  }\n}\n\nconst appReducer = combineReducers({ todos, filter });\nexport default appReducer;\n","import { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk';\nimport appReducer from './reducers';\n\nconst store = createStore(appReducer, applyMiddleware(thunk))\n\nexport default store; \n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport store from \"./configureStore\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}