{"ast":null,"code":"var _jsxFileName = \"/Users/mariuszurban/Desktop/MOJE PROJEKTY/0.ToDo with REDUX/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { createStore } from \"redux\";\nimport Header from \"./Header\";\nimport AddTodo from \"../components/AddTodo\";\nimport ConnectedTodoList from \"../containers/ConnectedTodoList\";\nimport ConnectedTodoFilter from \"../containers/ConnectedTodoFilter\";\nimport StateContext from \"../StateContext\";\nimport { fetchAPITodos } from \"../api\";\nimport appReducer from \"../reducers\";\nconst initialState = {\n  todos: [],\n  filter: \"all\"\n};\nconst store = createStore(appReducer, initialState);\nconst {\n  dispatch\n} = store;\nexport default function App() {\n  _s();\n\n  const [state, setState] = useState(initialState);\n  useEffect(() => {\n    const unsubscribe = store.subscribe(() => {\n      setState(store.getState());\n      return unsubscribe;\n    });\n  }, []);\n  useEffect(() => {\n    fetchAPITodos().then(todos => dispatch({\n      type: \"FETCH_TODOS\",\n      todos\n    }));\n  }, []);\n\n  function addTodo(title) {\n    dispatch({\n      type: \"ADD_TODO\",\n      title\n    });\n  }\n\n  function toggleTodo(id) {\n    dispatch({\n      type: \"TOGGLE_TODO\",\n      id\n    });\n  }\n\n  function removeTodo(id) {\n    dispatch({\n      type: \"REMOVE_TODO\",\n      id\n    });\n  }\n\n  function filterTodos(filter) {\n    dispatch({\n      type: \"FILTER_TODOS\",\n      filter\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(StateContext.Provider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: 400\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(AddTodo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ConnectedTodoList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ConnectedTodoFilter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  })));\n}\n\n_s(App, \"pdyGCmlY7TRGX76jdogJFnbHPh8=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mariuszurban/Desktop/MOJE PROJEKTY/0.ToDo with REDUX/src/components/App.js"],"names":["React","useState","useEffect","createStore","Header","AddTodo","ConnectedTodoList","ConnectedTodoFilter","StateContext","fetchAPITodos","appReducer","initialState","todos","filter","store","dispatch","App","state","setState","unsubscribe","subscribe","getState","then","type","addTodo","title","toggleTodo","id","removeTodo","filterTodos","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,OAA5B;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AACA,OAAOC,mBAAP,MAAgC,mCAAhC;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AAEA,SAASC,aAAT,QAA8B,QAA9B;AACA,OAAOC,UAAP,MAAuB,aAAvB;AAEA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,KAAK,EAAE,EAAT;AAAaC,EAAAA,MAAM,EAAE;AAArB,CAArB;AACA,MAAMC,KAAK,GAAGX,WAAW,CAACO,UAAD,EAAaC,YAAb,CAAzB;AACA,MAAM;AAAEI,EAAAA;AAAF,IAAeD,KAArB;AAEA,eAAe,SAASE,GAAT,GAAe;AAAA;;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAACU,YAAD,CAAlC;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,WAAW,GAAGL,KAAK,CAACM,SAAN,CAAgB,MAAM;AACxCF,MAAAA,QAAQ,CAACJ,KAAK,CAACO,QAAN,EAAD,CAAR;AACA,aAAOF,WAAP;AACD,KAHmB,CAApB;AAID,GALQ,EAKN,EALM,CAAT;AAOAjB,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,aAAa,GAAGa,IAAhB,CAAsBV,KAAD,IAAWG,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAE,aAAR;AAAuBX,MAAAA;AAAvB,KAAD,CAAxC;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASY,OAAT,CAAiBC,KAAjB,EAAwB;AACtBV,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAE,UAAR;AAAoBE,MAAAA;AAApB,KAAD,CAAR;AACD;;AAED,WAASC,UAAT,CAAoBC,EAApB,EAAwB;AACtBZ,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAE,aAAR;AAAuBI,MAAAA;AAAvB,KAAD,CAAR;AACD;;AAED,WAASC,UAAT,CAAoBD,EAApB,EAAwB;AACtBZ,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAE,aAAR;AAAuBI,MAAAA;AAAvB,KAAD,CAAR;AACD;;AAED,WAASE,WAAT,CAAqBhB,MAArB,EAA6B;AAC3BE,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAE,cAAR;AAAwBV,MAAAA;AAAxB,KAAD,CAAR;AACD;;AAED,sBACE,oBAAC,YAAD,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAE;AAAEiB,MAAAA,KAAK,EAAE;AAAT,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAME,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF,CADF;AAYD;;GA1CuBd,G;;KAAAA,G","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { createStore } from \"redux\";\n\nimport Header from \"./Header\";\nimport AddTodo from \"../components/AddTodo\";\nimport ConnectedTodoList from \"../containers/ConnectedTodoList\";\nimport ConnectedTodoFilter from \"../containers/ConnectedTodoFilter\";\nimport StateContext from \"../StateContext\";\n\nimport { fetchAPITodos } from \"../api\";\nimport appReducer from \"../reducers\";\n\nconst initialState = { todos: [], filter: \"all\" };\nconst store = createStore(appReducer, initialState);\nconst { dispatch } = store;\n\nexport default function App() {\n  const [state, setState] = useState(initialState);\n\n  useEffect(() => {\n    const unsubscribe = store.subscribe(() => {\n      setState(store.getState());\n      return unsubscribe;\n    });\n  }, []);\n\n  useEffect(() => {\n    fetchAPITodos().then((todos) => dispatch({ type: \"FETCH_TODOS\", todos }));\n  }, []);\n\n  function addTodo(title) {\n    dispatch({ type: \"ADD_TODO\", title });\n  }\n\n  function toggleTodo(id) {\n    dispatch({ type: \"TOGGLE_TODO\", id });\n  }\n\n  function removeTodo(id) {\n    dispatch({ type: \"REMOVE_TODO\", id });\n  }\n\n  function filterTodos(filter) {\n    dispatch({ type: \"FILTER_TODOS\", filter });\n  }\n\n  return (\n    <StateContext.Provider>\n      <div style={{ width: 400 }}>\n        <Header />\n        <AddTodo />\n        <hr />\n        <ConnectedTodoList />\n        <hr />\n        <ConnectedTodoFilter />\n      </div>\n    </StateContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}