{"ast":null,"code":"var _jsxFileName = \"/Users/mariuszurban/Desktop/MOJE PROJEKTY/0.ToDo with REDUX/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useStae, useEffect, useMemo } from 'react';\nimport { createStore } from 'redux';\nimport Header from './Header';\nimport AddTodo from './AddTodo';\nimport TodoList from './TodoList';\nimport TodoFilter from './TodoFilter';\nimport StateContext from './StateContext';\nimport { fetchAPITodos } from './api';\nimport appReducer from './reducers';\nconst initialState = {\n  todos: [],\n  filter: 'all'\n};\nexport default function App() {\n  _s();\n\n  const [state, dispatch] = useReducer(appReducer, {\n    todos: [],\n    filter: 'all'\n  });\n  useEffect(() => {\n    fetchAPITodos().then(todos => dispatch({\n      type: 'FETCH_TODOS',\n      todos\n    }));\n  }, []);\n  const filteredTodos = useMemo(() => {\n    const {\n      filter,\n      todos\n    } = state;\n\n    switch (filter) {\n      case 'active':\n        return todos.filter(t => t.completed === false);\n\n      case 'completed':\n        return todos.filter(t => t.completed === true);\n\n      default:\n      case 'all':\n        return todos;\n    }\n  }, [state]);\n\n  function addTodo(title) {\n    dispatch({\n      type: 'ADD_TODO',\n      title\n    });\n  }\n\n  function toggleTodo(id) {\n    dispatch({\n      type: 'TOGGLE_TODO',\n      id\n    });\n  }\n\n  function removeTodo(id) {\n    dispatch({\n      type: 'REMOVE_TODO',\n      id\n    });\n  }\n\n  function filterTodos(filter) {\n    dispatch({\n      type: 'FILTER_TODOS',\n      filter\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(StateContext.Provider, {\n    value: filteredTodos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: 400\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(AddTodo, {\n    addTodo: addTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TodoList, {\n    toggleTodo: toggleTodo,\n    removeTodo: removeTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TodoFilter, {\n    filter: state.filter,\n    filterTodos: filterTodos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  })));\n}\n\n_s(App, \"vGfQDcqAY8z4aQ2NwrYY873ozzQ=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mariuszurban/Desktop/MOJE PROJEKTY/0.ToDo with REDUX/src/App.js"],"names":["React","useStae","useEffect","useMemo","createStore","Header","AddTodo","TodoList","TodoFilter","StateContext","fetchAPITodos","appReducer","initialState","todos","filter","App","state","dispatch","useReducer","then","type","filteredTodos","t","completed","addTodo","title","toggleTodo","id","removeTodo","filterTodos","width"],"mappings":"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","sourcesContent":["import React, { useStae, useEffect, useMemo } from 'react'\nimport {createStore} from 'redux' ;\n\nimport Header from './Header'\nimport AddTodo from './AddTodo'\nimport TodoList from './TodoList'\nimport TodoFilter from './TodoFilter'\nimport StateContext from './StateContext'\n\nimport { fetchAPITodos } from './api'\nimport appReducer from './reducers'\n\nconst initialState = {todos: [], filter: 'all'}\n\nexport default function App () {\n  const [ state, dispatch ] = useReducer(appReducer, { todos: [], filter: 'all' })\n\n  useEffect(() => {\n    fetchAPITodos().then((todos) =>\n      dispatch({ type: 'FETCH_TODOS', todos })\n    )\n  }, [])\n\n  const filteredTodos = useMemo(() => {\n    const { filter, todos } = state\n    switch (filter) {\n      case 'active':\n        return todos.filter(t => t.completed === false)\n      \n      case 'completed':\n        return todos.filter(t => t.completed === true)\n      \n      default:\n      case 'all':\n        return todos\n    }\n  }, [ state ])\n\n  function addTodo (title) {\n    dispatch({ type: 'ADD_TODO', title })\n  }\n\n  function toggleTodo (id) {\n    dispatch({ type: 'TOGGLE_TODO', id })\n  }\n\n  function removeTodo (id) {\n    dispatch({ type: 'REMOVE_TODO', id })\n  }\n\n  function filterTodos (filter) {\n    dispatch({ type: 'FILTER_TODOS', filter })\n  }\n\n  return (\n    <StateContext.Provider value={filteredTodos}>\n      <div style={{ width: 400 }}>\n        <Header />\n        <AddTodo addTodo={addTodo} />\n        <hr />\n        <TodoList toggleTodo={toggleTodo} removeTodo={removeTodo} />\n        <hr />\n        <TodoFilter filter={state.filter} filterTodos={filterTodos} />\n      </div>\n    </StateContext.Provider>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}