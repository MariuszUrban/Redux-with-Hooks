{"ast":null,"code":"var _jsxFileName = \"/Users/mariuszurban/Desktop/MOJE PROJEKTY/0.ToDo with REDUX/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useStae, useEffect, useMemo } from \"react\";\nimport { createStore } from \"redux\";\nimport Header from \"./Header\";\nimport AddTodo from \"./AddTodo\";\nimport TodoList from \"./TodoList\";\nimport TodoFilter from \"./TodoFilter\";\nimport StateContext from \"./StateContext\";\nimport { fetchAPITodos } from \"./api\";\nimport appReducer from \"./reducers\";\nconst initialState = {\n  todos: [],\n  filter: \"all\"\n};\nconst store = createStore(appReducer, initialState);\nconst {\n  dispatch\n} = store;\nexport default function App() {\n  _s();\n\n  const [state, setState] = useState(initialState);\n  useEffect(() => {\n    const unsubscribe = store.subscribe(() => {\n      setState(store.get);\n    });\n  });\n  useEffect(() => {\n    fetchAPITodos().then(todos => dispatch({\n      type: \"FETCH_TODOS\",\n      todos\n    }));\n  }, []);\n  const filteredTodos = useMemo(() => {\n    const {\n      filter,\n      todos\n    } = state;\n\n    switch (filter) {\n      case \"active\":\n        return todos.filter(t => t.completed === false);\n\n      case \"completed\":\n        return todos.filter(t => t.completed === true);\n\n      default:\n      case \"all\":\n        return todos;\n    }\n  }, [state]);\n\n  function addTodo(title) {\n    dispatch({\n      type: \"ADD_TODO\",\n      title\n    });\n  }\n\n  function toggleTodo(id) {\n    dispatch({\n      type: \"TOGGLE_TODO\",\n      id\n    });\n  }\n\n  function removeTodo(id) {\n    dispatch({\n      type: \"REMOVE_TODO\",\n      id\n    });\n  }\n\n  function filterTodos(filter) {\n    dispatch({\n      type: \"FILTER_TODOS\",\n      filter\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(StateContext.Provider, {\n    value: filteredTodos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: 400\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(AddTodo, {\n    addTodo: addTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TodoList, {\n    toggleTodo: toggleTodo,\n    removeTodo: removeTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TodoFilter, {\n    filter: state.filter,\n    filterTodos: filterTodos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  })));\n}\n\n_s(App, \"XcS1LjgLxSeErJKxdVJs7r0R1r8=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mariuszurban/Desktop/MOJE PROJEKTY/0.ToDo with REDUX/src/App.js"],"names":["React","useStae","useEffect","useMemo","createStore","Header","AddTodo","TodoList","TodoFilter","StateContext","fetchAPITodos","appReducer","initialState","todos","filter","store","dispatch","App","state","setState","useState","unsubscribe","subscribe","get","then","type","filteredTodos","t","completed","addTodo","title","toggleTodo","id","removeTodo","filterTodos","width"],"mappings":"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","sourcesContent":["import React, { useStae, useEffect, useMemo } from \"react\";\nimport { createStore } from \"redux\";\n\nimport Header from \"./Header\";\nimport AddTodo from \"./AddTodo\";\nimport TodoList from \"./TodoList\";\nimport TodoFilter from \"./TodoFilter\";\nimport StateContext from \"./StateContext\";\n\nimport { fetchAPITodos } from \"./api\";\nimport appReducer from \"./reducers\";\n\nconst initialState = { todos: [], filter: \"all\" };\nconst store = createStore(appReducer, initialState);\nconst { dispatch } = store;\n\nexport default function App() {\n  const [state, setState] = useState(initialState);\n\n  useEffect(()=> {\n    const unsubscribe = store.subscribe(() => {\n      setState(store.get)\n    })\n  })\n\n  useEffect(() => {\n    fetchAPITodos().then((todos) => dispatch({ type: \"FETCH_TODOS\", todos }));\n  }, []);\n\n  const filteredTodos = useMemo(() => {\n    const { filter, todos } = state;\n    switch (filter) {\n      case \"active\":\n        return todos.filter((t) => t.completed === false);\n\n      case \"completed\":\n        return todos.filter((t) => t.completed === true);\n\n      default:\n      case \"all\":\n        return todos;\n    }\n  }, [state]);\n\n  function addTodo(title) {\n    dispatch({ type: \"ADD_TODO\", title });\n  }\n\n  function toggleTodo(id) {\n    dispatch({ type: \"TOGGLE_TODO\", id });\n  }\n\n  function removeTodo(id) {\n    dispatch({ type: \"REMOVE_TODO\", id });\n  }\n\n  function filterTodos(filter) {\n    dispatch({ type: \"FILTER_TODOS\", filter });\n  }\n\n  return (\n    <StateContext.Provider value={filteredTodos}>\n      <div style={{ width: 400 }}>\n        <Header />\n        <AddTodo addTodo={addTodo} />\n        <hr />\n        <TodoList toggleTodo={toggleTodo} removeTodo={removeTodo} />\n        <hr />\n        <TodoFilter filter={state.filter} filterTodos={filterTodos} />\n      </div>\n    </StateContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}